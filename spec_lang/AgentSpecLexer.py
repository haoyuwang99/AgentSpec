# Generated from AgentSpec.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,33,499,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,
        8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,3,11,165,8,11,1,12,1,
        12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,
        19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,
        23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,255,8,23,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,373,8,
        24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
        25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
        26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,
        27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
        27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,
        27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,3,27,450,8,
        27,1,28,4,28,453,8,28,11,28,12,28,454,1,28,1,28,1,29,1,29,5,29,461,
        8,29,10,29,12,29,464,9,29,1,30,1,30,5,30,468,8,30,10,30,12,30,471,
        9,30,1,30,1,30,1,31,4,31,476,8,31,11,31,12,31,477,1,32,4,32,481,
        8,32,11,32,12,32,482,1,32,1,32,5,32,487,8,32,10,32,12,32,490,9,32,
        1,32,1,32,4,32,494,8,32,11,32,12,32,495,3,32,498,8,32,1,469,0,33,
        1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
        27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,
        49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,1,0,4,3,0,
        9,10,13,13,32,32,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
        122,1,0,48,57,525,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
        0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,1,67,1,0,0,
        0,3,72,1,0,0,0,5,80,1,0,0,0,7,88,1,0,0,0,9,94,1,0,0,0,11,102,1,0,
        0,0,13,106,1,0,0,0,15,110,1,0,0,0,17,114,1,0,0,0,19,119,1,0,0,0,
        21,125,1,0,0,0,23,164,1,0,0,0,25,166,1,0,0,0,27,168,1,0,0,0,29,170,
        1,0,0,0,31,172,1,0,0,0,33,174,1,0,0,0,35,176,1,0,0,0,37,178,1,0,
        0,0,39,180,1,0,0,0,41,182,1,0,0,0,43,184,1,0,0,0,45,186,1,0,0,0,
        47,254,1,0,0,0,49,372,1,0,0,0,51,374,1,0,0,0,53,392,1,0,0,0,55,449,
        1,0,0,0,57,452,1,0,0,0,59,458,1,0,0,0,61,465,1,0,0,0,63,475,1,0,
        0,0,65,497,1,0,0,0,67,68,5,114,0,0,68,69,5,117,0,0,69,70,5,108,0,
        0,70,71,5,101,0,0,71,2,1,0,0,0,72,73,5,116,0,0,73,74,5,114,0,0,74,
        75,5,105,0,0,75,76,5,103,0,0,76,77,5,103,0,0,77,78,5,101,0,0,78,
        79,5,114,0,0,79,4,1,0,0,0,80,81,5,112,0,0,81,82,5,114,0,0,82,83,
        5,101,0,0,83,84,5,112,0,0,84,85,5,97,0,0,85,86,5,114,0,0,86,87,5,
        101,0,0,87,6,1,0,0,0,88,89,5,99,0,0,89,90,5,104,0,0,90,91,5,101,
        0,0,91,92,5,99,0,0,92,93,5,107,0,0,93,8,1,0,0,0,94,95,5,101,0,0,
        95,96,5,110,0,0,96,97,5,102,0,0,97,98,5,111,0,0,98,99,5,114,0,0,
        99,100,5,99,0,0,100,101,5,101,0,0,101,10,1,0,0,0,102,103,5,97,0,
        0,103,104,5,99,0,0,104,105,5,116,0,0,105,12,1,0,0,0,106,107,5,97,
        0,0,107,108,5,110,0,0,108,109,5,121,0,0,109,14,1,0,0,0,110,111,5,
        118,0,0,111,112,5,97,0,0,112,113,5,108,0,0,113,16,1,0,0,0,114,115,
        5,116,0,0,115,116,5,114,0,0,116,117,5,117,0,0,117,118,5,101,0,0,
        118,18,1,0,0,0,119,120,5,102,0,0,120,121,5,97,0,0,121,122,5,108,
        0,0,122,123,5,115,0,0,123,124,5,101,0,0,124,20,1,0,0,0,125,126,5,
        101,0,0,126,127,5,110,0,0,127,128,5,100,0,0,128,22,1,0,0,0,129,130,
        5,103,0,0,130,165,5,116,0,0,131,132,5,108,0,0,132,165,5,116,0,0,
        133,134,5,101,0,0,134,165,5,113,0,0,135,136,5,103,0,0,136,137,5,
        101,0,0,137,165,5,113,0,0,138,139,5,108,0,0,139,140,5,101,0,0,140,
        165,5,113,0,0,141,142,5,108,0,0,142,143,5,108,0,0,143,144,5,109,
        0,0,144,145,5,95,0,0,145,146,5,106,0,0,146,147,5,117,0,0,147,148,
        5,100,0,0,148,149,5,103,0,0,149,165,5,101,0,0,150,151,5,116,0,0,
        151,152,5,111,0,0,152,153,5,111,0,0,153,154,5,108,0,0,154,155,5,
        95,0,0,155,156,5,101,0,0,156,157,5,109,0,0,157,158,5,117,0,0,158,
        159,5,95,0,0,159,160,5,106,0,0,160,161,5,117,0,0,161,162,5,100,0,
        0,162,163,5,103,0,0,163,165,5,101,0,0,164,129,1,0,0,0,164,131,1,
        0,0,0,164,133,1,0,0,0,164,135,1,0,0,0,164,138,1,0,0,0,164,141,1,
        0,0,0,164,150,1,0,0,0,165,24,1,0,0,0,166,167,5,58,0,0,167,26,1,0,
        0,0,168,169,5,44,0,0,169,28,1,0,0,0,170,171,5,40,0,0,171,30,1,0,
        0,0,172,173,5,41,0,0,173,32,1,0,0,0,174,175,5,123,0,0,175,34,1,0,
        0,0,176,177,5,125,0,0,177,36,1,0,0,0,178,179,5,91,0,0,179,38,1,0,
        0,0,180,181,5,93,0,0,181,40,1,0,0,0,182,183,5,64,0,0,183,42,1,0,
        0,0,184,185,5,61,0,0,185,44,1,0,0,0,186,187,5,33,0,0,187,46,1,0,
        0,0,188,189,5,105,0,0,189,190,5,115,0,0,190,191,5,95,0,0,191,192,
        5,103,0,0,192,193,5,105,0,0,193,255,5,116,0,0,194,195,5,104,0,0,
        195,196,5,97,0,0,196,197,5,115,0,0,197,198,5,95,0,0,198,199,5,99,
        0,0,199,200,5,114,0,0,200,201,5,105,0,0,201,202,5,116,0,0,202,203,
        5,105,0,0,203,204,5,99,0,0,204,205,5,97,0,0,205,206,5,108,0,0,206,
        207,5,95,0,0,207,208,5,114,0,0,208,209,5,101,0,0,209,210,5,100,0,
        0,210,211,5,105,0,0,211,212,5,114,0,0,212,213,5,101,0,0,213,214,
        5,99,0,0,214,215,5,116,0,0,215,216,5,105,0,0,216,217,5,111,0,0,217,
        255,5,110,0,0,218,219,5,105,0,0,219,220,5,115,0,0,220,221,5,95,0,
        0,221,222,5,100,0,0,222,223,5,101,0,0,223,224,5,115,0,0,224,225,
        5,116,0,0,225,226,5,114,0,0,226,227,5,117,0,0,227,228,5,99,0,0,228,
        229,5,116,0,0,229,230,5,105,0,0,230,231,5,118,0,0,231,255,5,101,
        0,0,232,233,5,105,0,0,233,234,5,115,0,0,234,235,5,95,0,0,235,236,
        5,119,0,0,236,237,5,105,0,0,237,238,5,116,0,0,238,239,5,104,0,0,
        239,240,5,105,0,0,240,241,5,110,0,0,241,242,5,95,0,0,242,243,5,108,
        0,0,243,244,5,101,0,0,244,245,5,110,0,0,245,246,5,103,0,0,246,247,
        5,116,0,0,247,248,5,104,0,0,248,249,5,95,0,0,249,250,5,108,0,0,250,
        251,5,105,0,0,251,252,5,109,0,0,252,253,5,105,0,0,253,255,5,116,
        0,0,254,188,1,0,0,0,254,194,1,0,0,0,254,218,1,0,0,0,254,232,1,0,
        0,0,255,48,1,0,0,0,256,257,5,105,0,0,257,258,5,115,0,0,258,259,5,
        95,0,0,259,260,5,111,0,0,260,261,5,110,0,0,261,262,5,95,0,0,262,
        263,5,100,0,0,263,264,5,101,0,0,264,265,5,100,0,0,265,266,5,105,
        0,0,266,267,5,99,0,0,267,268,5,97,0,0,268,269,5,116,0,0,269,270,
        5,101,0,0,270,271,5,100,0,0,271,272,5,95,0,0,272,273,5,98,0,0,273,
        274,5,114,0,0,274,275,5,97,0,0,275,276,5,110,0,0,276,277,5,99,0,
        0,277,373,5,104,0,0,278,279,5,105,0,0,279,280,5,115,0,0,280,281,
        5,95,0,0,281,282,5,99,0,0,282,283,5,111,0,0,283,284,5,109,0,0,284,
        285,5,109,0,0,285,286,5,105,0,0,286,373,5,116,0,0,287,288,5,105,
        0,0,288,289,5,115,0,0,289,290,5,95,0,0,290,291,5,112,0,0,291,292,
        5,117,0,0,292,293,5,115,0,0,293,373,5,104,0,0,294,295,5,105,0,0,
        295,296,5,115,0,0,296,297,5,95,0,0,297,298,5,109,0,0,298,299,5,105,
        0,0,299,300,5,110,0,0,300,301,5,105,0,0,301,302,5,109,0,0,302,303,
        5,97,0,0,303,304,5,108,0,0,304,305,5,95,0,0,305,306,5,99,0,0,306,
        307,5,104,0,0,307,308,5,97,0,0,308,309,5,110,0,0,309,310,5,103,0,
        0,310,311,5,101,0,0,311,312,5,95,0,0,312,313,5,99,0,0,313,314,5,
        111,0,0,314,315,5,109,0,0,315,316,5,109,0,0,316,317,5,105,0,0,317,
        373,5,116,0,0,318,319,5,105,0,0,319,320,5,115,0,0,320,321,5,95,0,
        0,321,322,5,117,0,0,322,323,5,112,0,0,323,324,5,95,0,0,324,325,5,
        116,0,0,325,326,5,111,0,0,326,327,5,95,0,0,327,328,5,100,0,0,328,
        329,5,97,0,0,329,330,5,116,0,0,330,373,5,101,0,0,331,332,5,105,0,
        0,332,333,5,115,0,0,333,334,5,95,0,0,334,335,5,99,0,0,335,336,5,
        111,0,0,336,337,5,109,0,0,337,338,5,109,0,0,338,339,5,105,0,0,339,
        340,5,116,0,0,340,341,5,95,0,0,341,342,5,109,0,0,342,343,5,115,0,
        0,343,344,5,103,0,0,344,345,5,95,0,0,345,346,5,114,0,0,346,347,5,
        101,0,0,347,348,5,97,0,0,348,349,5,100,0,0,349,350,5,97,0,0,350,
        351,5,98,0,0,351,352,5,108,0,0,352,373,5,101,0,0,353,354,5,104,0,
        0,354,355,5,97,0,0,355,356,5,115,0,0,356,357,5,95,0,0,357,358,5,
        117,0,0,358,359,5,110,0,0,359,360,5,116,0,0,360,361,5,114,0,0,361,
        362,5,97,0,0,362,363,5,99,0,0,363,364,5,107,0,0,364,365,5,101,0,
        0,365,366,5,100,0,0,366,367,5,95,0,0,367,368,5,102,0,0,368,369,5,
        105,0,0,369,370,5,108,0,0,370,371,5,101,0,0,371,373,5,115,0,0,372,
        256,1,0,0,0,372,278,1,0,0,0,372,287,1,0,0,0,372,294,1,0,0,0,372,
        318,1,0,0,0,372,331,1,0,0,0,372,353,1,0,0,0,373,50,1,0,0,0,374,375,
        5,105,0,0,375,376,5,115,0,0,376,377,5,95,0,0,377,378,5,105,0,0,378,
        379,5,109,0,0,379,380,5,112,0,0,380,381,5,111,0,0,381,382,5,114,
        0,0,382,383,5,116,0,0,383,384,5,97,0,0,384,385,5,110,0,0,385,386,
        5,116,0,0,386,387,5,95,0,0,387,388,5,116,0,0,388,389,5,97,0,0,389,
        390,5,115,0,0,390,391,5,107,0,0,391,52,1,0,0,0,392,393,5,105,0,0,
        393,394,5,110,0,0,394,395,5,118,0,0,395,396,5,111,0,0,396,397,5,
        107,0,0,397,398,5,101,0,0,398,399,5,95,0,0,399,400,5,97,0,0,400,
        401,5,99,0,0,401,402,5,116,0,0,402,403,5,105,0,0,403,404,5,111,0,
        0,404,405,5,110,0,0,405,54,1,0,0,0,406,407,5,117,0,0,407,408,5,115,
        0,0,408,409,5,101,0,0,409,410,5,114,0,0,410,411,5,95,0,0,411,412,
        5,105,0,0,412,413,5,110,0,0,413,414,5,115,0,0,414,415,5,112,0,0,
        415,416,5,101,0,0,416,417,5,99,0,0,417,418,5,116,0,0,418,419,5,105,
        0,0,419,420,5,111,0,0,420,450,5,110,0,0,421,422,5,108,0,0,422,423,
        5,108,0,0,423,424,5,109,0,0,424,425,5,95,0,0,425,426,5,115,0,0,426,
        427,5,101,0,0,427,428,5,108,0,0,428,429,5,102,0,0,429,430,5,95,0,
        0,430,431,5,114,0,0,431,432,5,101,0,0,432,433,5,102,0,0,433,434,
        5,108,0,0,434,435,5,101,0,0,435,436,5,99,0,0,436,450,5,116,0,0,437,
        438,5,115,0,0,438,439,5,116,0,0,439,440,5,111,0,0,440,450,5,112,
        0,0,441,442,5,110,0,0,442,443,5,111,0,0,443,444,5,110,0,0,444,450,
        5,101,0,0,445,446,5,115,0,0,446,447,5,107,0,0,447,448,5,105,0,0,
        448,450,5,112,0,0,449,406,1,0,0,0,449,421,1,0,0,0,449,437,1,0,0,
        0,449,441,1,0,0,0,449,445,1,0,0,0,450,56,1,0,0,0,451,453,7,0,0,0,
        452,451,1,0,0,0,453,454,1,0,0,0,454,452,1,0,0,0,454,455,1,0,0,0,
        455,456,1,0,0,0,456,457,6,28,0,0,457,58,1,0,0,0,458,462,7,1,0,0,
        459,461,7,2,0,0,460,459,1,0,0,0,461,464,1,0,0,0,462,460,1,0,0,0,
        462,463,1,0,0,0,463,60,1,0,0,0,464,462,1,0,0,0,465,469,5,34,0,0,
        466,468,9,0,0,0,467,466,1,0,0,0,468,471,1,0,0,0,469,470,1,0,0,0,
        469,467,1,0,0,0,470,472,1,0,0,0,471,469,1,0,0,0,472,473,5,34,0,0,
        473,62,1,0,0,0,474,476,7,3,0,0,475,474,1,0,0,0,476,477,1,0,0,0,477,
        475,1,0,0,0,477,478,1,0,0,0,478,64,1,0,0,0,479,481,7,3,0,0,480,479,
        1,0,0,0,481,482,1,0,0,0,482,480,1,0,0,0,482,483,1,0,0,0,483,484,
        1,0,0,0,484,488,5,46,0,0,485,487,7,3,0,0,486,485,1,0,0,0,487,490,
        1,0,0,0,488,486,1,0,0,0,488,489,1,0,0,0,489,498,1,0,0,0,490,488,
        1,0,0,0,491,493,5,46,0,0,492,494,7,3,0,0,493,492,1,0,0,0,494,495,
        1,0,0,0,495,493,1,0,0,0,495,496,1,0,0,0,496,498,1,0,0,0,497,480,
        1,0,0,0,497,491,1,0,0,0,498,66,1,0,0,0,13,0,164,254,372,449,454,
        462,469,477,482,488,495,497,1,6,0,0
    ]

class AgentSpecLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    RULE = 1
    TRIGGER = 2
    PREPARE = 3
    CHECK = 4
    ENFORCE = 5
    ACTION = 6
    ANY = 7
    VAL = 8
    TRUE = 9
    FALSE = 10
    END = 11
    EVAL_OP = 12
    COLON = 13
    COMMA = 14
    LPAREN = 15
    RPAREN = 16
    LBRACE = 17
    RBRACE = 18
    LBRACK = 19
    RBRACK = 20
    AT = 21
    EQ = 22
    NOT = 23
    CMD_PREDICATE = 24
    GIT_PREDICATE = 25
    TODOIST_PREDICATE = 26
    INVOKE = 27
    ENFORCEMENT = 28
    WS = 29
    IDENTIFIER = 30
    STRING = 31
    INTEGER = 32
    FLOAT = 33

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'rule'", "'trigger'", "'prepare'", "'check'", "'enforce'", 
            "'act'", "'any'", "'val'", "'true'", "'false'", "'end'", "':'", 
            "','", "'('", "')'", "'{'", "'}'", "'['", "']'", "'@'", "'='", 
            "'!'", "'is_important_task'", "'invoke_action'" ]

    symbolicNames = [ "<INVALID>",
            "RULE", "TRIGGER", "PREPARE", "CHECK", "ENFORCE", "ACTION", 
            "ANY", "VAL", "TRUE", "FALSE", "END", "EVAL_OP", "COLON", "COMMA", 
            "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
            "AT", "EQ", "NOT", "CMD_PREDICATE", "GIT_PREDICATE", "TODOIST_PREDICATE", 
            "INVOKE", "ENFORCEMENT", "WS", "IDENTIFIER", "STRING", "INTEGER", 
            "FLOAT" ]

    ruleNames = [ "RULE", "TRIGGER", "PREPARE", "CHECK", "ENFORCE", "ACTION", 
                  "ANY", "VAL", "TRUE", "FALSE", "END", "EVAL_OP", "COLON", 
                  "COMMA", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", 
                  "RBRACK", "AT", "EQ", "NOT", "CMD_PREDICATE", "GIT_PREDICATE", 
                  "TODOIST_PREDICATE", "INVOKE", "ENFORCEMENT", "WS", "IDENTIFIER", 
                  "STRING", "INTEGER", "FLOAT" ]

    grammarFileName = "AgentSpec.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


